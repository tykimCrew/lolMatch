{"version":3,"sources":["components/BoardUrlInput.js","components/MemberCard.js","components/Members.js","components/PositionCard.js","components/Positions.js","App.js","reportWebVitals.js","index.js"],"names":["BoardUrlInput","props","boardUrlOnChange","e","setState","boardUrlValue","target","value","state","Fragment","id","placeholder","this","onChange","onClick","onBtnClick","Component","MemberCard","member","memberInfo","className","draggable","onDragStart","src","profileImage","alt","userId","userNick","process","Members","cmtElList","memberList","map","PositionCard","onDragOver","onDrop","side","position","length","Positions","filter","App","getCmtListAjax","boardUrl","urlArr","split","url","$","ajax","context","done","json","result","data","item","push","user_id","user_nick","profile_image","comment","likeCnt","like_cnt","cmtList","dragUserInfo","dataTransfer","setData","JSON","stringify","preventDefault","parse","getData","members","red","center","blue","forEach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf98b1c6.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass BoardUrlInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            boardUrlValue : \"\"\r\n        };\r\n    }\r\n\r\n    boardUrlOnChange = (e) => {\r\n        this.setState({\r\n            boardUrlValue : e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <input \r\n                    id=\"boardUrl\"\r\n                    placeholder=\"방송국 게시판 URL을 입력해주세요\"\r\n                    value={this.state.boardUrlValue}\r\n                    onChange={this.boardUrlOnChange}\r\n                />\r\n                <button onClick={() => this.props.onBtnClick(this.state.boardUrlValue)}>\r\n                    가져오기\r\n                </button>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    \r\n}\r\n\r\nexport default BoardUrlInput;","import React, {Component} from 'react';\r\nimport '../MemberCard.css';\r\n//import images from '../images/Position_Bronze-Bot.png';\r\n\r\nclass MemberCard extends Component {\r\n    \r\n    render() {\r\n        let member = this.props.memberInfo;\r\n       /**\r\n        * memberInfo\r\n        * \r\n        * userId : item.user_id,\r\n        * userNick : item.user_nick,\r\n        * profileImage : item.profile_image,\r\n        * comment : item.comment,\r\n        * likeCnt : item.like_cnt\r\n        * \r\n        */\r\n       return (\r\n           <React.Fragment>\r\n               {/* <div className=\"memberCard\"\r\n                    draggable\r\n                    onDragStart={ (e) => this.props.onDragStart(e, this.props.memberInfo) }\r\n               >\r\n                   <img src={member.profileImage} alt={member.userId} className=\"memberIcon\"></img>\r\n                   {member.userNick}({member.userId})\r\n               </div> */}\r\n               <div className=\"memberCard container\"\r\n                draggable\r\n                onDragStart={ (e) => this.props.onDragStart(e, this.props.memberInfo) }\r\n               >\r\n                    <div className=\"img-container\">\r\n                        <img src={member.profileImage} alt={member.userId}/>\r\n                    </div>\r\n                    \r\n                    <div className=\"content\">\r\n                    <div className=\"head\">\r\n                        <p>{member.userNick} <span>{member.userId}</span></p>\r\n                        {/* 추천수: {member.likeCnt} */}\r\n                    </div>\r\n                    <div className=\"data\">\r\n                        <div className=\"inner-data\">\r\n                            {/* <p className=\"nick\">한번만주세요</p> */}\r\n                            <img src={process.env.PUBLIC_URL + '/images/Position_Grandmaster-Jungle.png'} alt={member.userId}/>\r\n                            <p className=\"nick\">GrandMaster 123P</p>\r\n                        </div>\r\n                    </div>\r\n                    </div>   \r\n                </div>\r\n           </React.Fragment>\r\n       )\r\n   }\r\n}\r\n\r\nexport default MemberCard;","import React, {Component} from 'react';\r\n\r\nimport MemberCard from './MemberCard';\r\n\r\n\r\n\r\nclass Members extends Component {\r\n     render() {\r\n        const cmtElList = this.props.memberList.map( memberInfo =>\r\n            <MemberCard key={memberInfo.userId}\r\n                        memberInfo={memberInfo}\r\n                        onDragStart={this.props.onDragStart}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {cmtElList}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Members;","import React, {Component} from 'react';\r\n\r\nimport MemberCard from './MemberCard';\r\n\r\nclass PositionCard extends Component {\r\n    \r\n\r\n    render() {\r\n       return (\r\n           <React.Fragment>\r\n               <div className=\"positionCard\"\r\n                    onDragOver={(e) => this.props.onDragOver(e)}\r\n                    onDrop={(e) => this.props.onDrop(e, this.props.side, this.props.position)}\r\n                >\r\n                    {\r\n                        \r\n                        this.props.memberInfo.length !== 0 ? \r\n                        <MemberCard memberInfo={this.props.memberInfo[0]} onDragStart={this.props.onDragStart} /> : this.props.position\r\n                    }\r\n                </div>\r\n           </React.Fragment>\r\n       )\r\n   }\r\n}\r\n\r\nexport default PositionCard;","import React, {Component} from 'react';\r\n\r\nimport PositionCard from './PositionCard';\r\n\r\n\r\n\r\n\r\nclass Positions extends Component {\r\n     render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={this.props.side}>\r\n                    <PositionCard position=\"top\"\r\n                        onDragStart={this.props.onDragStart}\r\n                        onDragOver={this.props.onDragOver}\r\n                        onDrop={this.props.onDrop}\r\n                        side={this.props.side}\r\n                        memberInfo={this.props.memberList.filter(e => e.position === 'top')}\r\n                    />\r\n\r\n                    \r\n                    \r\n                    <PositionCard position=\"jungle\"\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDragOver={this.props.onDragOver}\r\n                    onDrop={this.props.onDrop}\r\n                    side={this.props.side}\r\n                    memberInfo={this.props.memberList.filter(e => e.position === 'jungle')}/>\r\n                    <PositionCard position=\"mid\"\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDragOver={this.props.onDragOver}\r\n                    onDrop={this.props.onDrop}\r\n                    side={this.props.side}\r\n                    memberInfo={this.props.memberList.filter(e => e.position === 'mid')}/>\r\n                    <PositionCard position=\"ad\"\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDragOver={this.props.onDragOver}\r\n                    onDrop={this.props.onDrop}\r\n                    side={this.props.side}\r\n                    memberInfo={this.props.memberList.filter(e => e.position === 'ad')}/>\r\n                    <PositionCard position=\"supporter\"\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDragOver={this.props.onDragOver}\r\n                    onDrop={this.props.onDrop}\r\n                    side={this.props.side}\r\n                    memberInfo={this.props.memberList.filter(e => e.position === 'supporter')}/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Positions;","import React, { Component } from 'react';\nimport './App.css';\n\n\nimport $ from 'jquery';\nimport BoardUrlInput from './components/BoardUrlInput';\nimport Members from './components/Members';\nimport Positions from './components/Positions';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        cmtList: [],\n    };\n  }\n\n  getCmtListAjax = (boardUrl) => {\n    // apiUrl = \"https://bjapi.afreecatv.com/api/khm11903/title/65714065/comment?page=1&orderby=like_cnt\";\n     boardUrl = 'http://bj.afreecatv.com/khm11903/post/65714065';\n\n    var urlArr = boardUrl.split('/');\n    var url = 'https://bjapi.afreecatv.com/api/' + urlArr[3] + '/title/' + urlArr[5] + '/comment?page=1&orderby=like_cnt';\n\n    $.ajax({\n        url : url,\n        context : this //context : this => .done()에서 this를 사용하기위해\n    })\n    .done( json => {\n        var result = [];\n\n        json.data.map(\n            item => result.push({\n                userId : item.user_id,\n                userNick : item.user_nick,\n                profileImage : item.profile_image,\n                comment : item.comment,\n                likeCnt : item.like_cnt,\n                side : 'center',\n                position : ''\n            })\n        );\n\n        this.setState({\n            cmtList : result\n        });\n    });\n  }\n\n  onDragStart = (e, dragUserInfo) => {\n    e.dataTransfer.setData('dragUserInfo', JSON.stringify(dragUserInfo));\n  }\n\n  onDragOver = (e) => {\n    e.preventDefault();\n  }\n\n  onDrop = (e, side, position) => {\n      let dragUserInfo = JSON.parse(e.dataTransfer.getData('dragUserInfo'));\n      //console.log(dragUserInfo.userId);\n\n      let cmtList = this.state.cmtList.filter( member => {\n        if(member.side === side && member.position === position) { //이미 해당포지션에 누가있다면\n          if(dragUserInfo.side === 'center') { //내가 센터에서왔다면 센터로보내고\n            member.side = 'center';\n            member.position = '';\n          } else { //센터에서 온게아니라 자리교체라면\n            member.side = dragUserInfo.side;\n            member.position = dragUserInfo.position;\n          }\n        }\n\n        if(member.userId === dragUserInfo.userId) {\n          member.side = side;\n          member.position = position;\n        }\n\n        return member;\n      });\n\n      this.setState({\n        ...this.state,\n        cmtList\n      });\n  }\n\n  render() {\n    var members = {\n      red : [],\n      center : [],\n      blue : []\n    };\n\n    this.state.cmtList.forEach( member => {\n      members[member.side].push(member);\n    });\n\n    \n    return (\n      <div className=\"App\">\n\n        <div className=\"top\">\n          <BoardUrlInput onBtnClick={this.getCmtListAjax} />\n        </div>\n\n        <div className=\"bottom\">\n\n          <div className=\"bottom_left\">\n            <Positions side=\"red\"\n              memberList={members['red']}\n              onDragOver={this.onDragOver}\n              onDrop={this.onDrop}\n              onDragStart={this.onDragStart}\n            />\n          </div>\n          <div className=\"bottom_center\">\n            <Members side=\"center\"\n              memberList={members['center']}\n              onDragStart={this.onDragStart}\n            />\n          </div>\n          <div className=\"bottom_right\">\n            <Positions side=\"blue\" \n              memberList={members['blue']}\n              onDragOver={this.onDragOver}\n              onDrop={this.onDrop}\n              onDragStart={this.onDragStart}\n            />\n          </div>\n\n        </div>\n\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}