{"version":3,"sources":["components/TestBtn.js","App.js","reportWebVitals.js","index.js"],"names":["TestBtn","props","getCmtListAjax","$","ajax","url","context","done","json","setCmtListState","data","result","map","item","push","userId","user_id","userNick","user_nick","profileImage","profile_image","comment","likeCnt","like_cnt","setState","cmtList","state","cmtElList","this","style","width","height","src","alt","onClick","textAlign","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA+DeA,E,kDA3DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,eAAiB,WAGbC,IAAEC,KAAK,CACHC,IAHS,0FAITC,QAAO,iBAEVC,MAAM,SAAAC,GAAI,OAAI,EAAKC,gBAAgBD,OAdrB,EAiBnBC,gBAAkB,SAACD,GAEf,IAAIE,EAAOF,EAAKE,KACZC,EAAS,GAEbD,EAAKE,KACD,SAAAC,GAAI,OAAIF,EAAOG,KAAK,CAChBC,OAASF,EAAKG,QACdC,SAAWJ,EAAKK,UAChBC,aAAeN,EAAKO,cACpBC,QAAUR,EAAKQ,QACfC,QAAUT,EAAKU,cAIvB,EAAKC,SAAS,CACVC,QAAUd,KA/Bd,EAAKe,MAAQ,CACXD,QAAS,IAHI,E,qDAsCf,IAAME,EAAYC,KAAKF,MAAMD,QAAQb,KAAK,SAAAC,GAAI,OAC1C,+BACI,qBAAKgB,MAAO,CAACC,MAAM,OAAQC,OAAO,QAASC,IAAKnB,EAAKM,aAAcc,IAAI,uBACtEpB,EAAKE,OAFV,IAEmBF,EAAKI,SAFxB,4BAE4CJ,EAAKS,QAFjD,MAE6DT,EAAKQ,UAFzDR,EAAKE,WAMlB,OACI,gCACI,wBAAQmB,QAASN,KAAK1B,eAAtB,sCAGA,qBAAK2B,MAAO,CAACM,UAAY,QAAzB,SACIR,W,GApDES,aCSPC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63fb10b5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass TestBtn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          cmtList: [],\r\n        };\r\n    }\r\n\r\n    getCmtListAjax = () => {\r\n        var cmtUrl = \"https://bjapi.afreecatv.com/api/khm11903/title/65714065/comment?page=1&orderby=like_cnt\";\r\n\r\n        $.ajax({\r\n            url : cmtUrl,\r\n            context : this //context : this => .done()에서 this를 사용하기위해\r\n        })\r\n        .done( json => this.setCmtListState(json) );\r\n    }\r\n\r\n    setCmtListState = (json) => {\r\n        //cmtList 는 {user_id, user_nick, profile_image, comment, like_cnt}\r\n        var data = json.data;\r\n        var result = [];\r\n\r\n        data.map(\r\n            item => result.push({\r\n                userId : item.user_id,\r\n                userNick : item.user_nick,\r\n                profileImage : item.profile_image,\r\n                comment : item.comment,\r\n                likeCnt : item.like_cnt\r\n            })\r\n        );\r\n\r\n        this.setState({\r\n            cmtList : result\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const cmtElList = this.state.cmtList.map( item =>\r\n            <li key={item.userId}>\r\n                <img style={{width:\"48px\", height:\"48px\"}} src={item.profileImage} alt=\"이미지\" />\r\n                {item.userId}({item.userNick}) / 추천수 : {item.likeCnt} / {item.comment}\r\n            </li>\r\n        );\r\n        \r\n        return (\r\n            <div>\r\n                <button onClick={this.getCmtListAjax}>\r\n                    가져오기\r\n                </button>\r\n                <div style={{textAlign : 'left'}}>\r\n                   {cmtElList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default TestBtn;","import './App.css';\n\nimport TestBtn from './components/TestBtn'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TestBtn></TestBtn>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}